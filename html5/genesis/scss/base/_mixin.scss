@mixin ellipse($lineHeight: 10px, $line : 1) { //FLEX사용 floatX(clearefix X)
    overflow: hidden;
    text-overflow: ellipsis;
    @if($line > 1) {
        display: -webkit-box;
        -webkit-line-clamp: $line;
        -webkit-box-orient: vertical;
        line-height: $lineHeight;
        max-height: $lineHeight * $line;
    }@else {
        white-space: nowrap;
    }
}

@mixin linkBtn($color : $white, $type : 'v1'){
    color: $color;
    font-size: 16px; //기본 폰트값
    //display: flex; 버튼크기 100%로 너무 커서 inline-flex로 바꿈
    display: inline-flex; //영역100%채우지않고 내 컨텐츠만큼만 가져옴
    gap: 6px;
    align-items: center;
    position: relative;
    top: 0px;
    left: 0px;
    &:after{
        content: "";
        width: 7px;
        height: 12px;
        display: block;
        background: url('../../images/ico-arrow-white.png') no-repeat center center / 7px;
        transform : rotate(180deg);
    }
    span{
        display: block;
        width: 100%;
        position: relative;
        top: 0px;
        left: 0px;
        &:after{// hover시 나타날 라인효과 만들기
            content: "";
            width: 0%;
            height: 1px;
            background: $color;
            display: block;
            position: absolute;
            left: 0px;
            bottom: -6px;
            //transition: 500ms; 양방향으로 
        }
        &:hover{
            &:after{
                transition: 500ms; //hover할때만 
                width: 100%;
            }
        }
        @if $type == 'v2'{ //span안에
            &:before{ // 라인이 있는 녀석
                content: "";
                height: 1px;
                width: 100%;
                background: $color;
                position: absolute;
                left: 0px;
                bottom: -6px;
            }
            &:hover:before{
                display: none;
            }
        }
    }
}

//분기점?으로
$laptop : 1600px;
$laptop02 : 1360px;
$tablet : 1024px;
$mobile : 768px;

.link-box{
    .link-text-btn{
        &.v2{
            @include linkBtn($white, 'v2');
        }   
    }
}

@mixin laptop{
    @media screen and (max-width : $laptop){
        //값을 미리 불러올 수 없다.
        @content;
        /* @content : 선언된 mixin안에 새로운 스타일을 적용할 때 사용하는 기법으로
            기존 mixin이 가지고 있는 스타일 외에 선택자나 속성 등을 새로 추가할 때 사용한다.
            (즉, 나중에 @include하여 스타일을 새로 추가하겠다는 의미) 
        */
    }
};

@mixin laptop02{
    @media screen and (max-width : $laptop02) {
        @content;
    }
};

@mixin tablet{
    @media screen and (max-width : $tablet) {
        @content;
    }
};

@mixin mobile{
    @media screen and (max-width : $mobile) {
        @content;
    }
};