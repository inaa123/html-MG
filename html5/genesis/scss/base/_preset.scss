//mixin보다 활용도 높을 때, 값이 바뀌지 않으면 (mixin보다) 클래스로 넣기도 한다.
.inner{
    width : auto;
    height : 100%;
    padding : 0px 140px; //inner 여백 양옆 사이즈가 다름, 기본 사이즈로 맞추기 위해 맨 처음으로 padding처리 한다.
    position: relative;
    top: 0px;
    left: 0px;
}

//대체 텍스트
.blind{ 
    position: absolute;
    width: 1px; //size없으면 blind안됨
    height: 1px;
    clip : rect( 1px, 1px, 1px, 1px);
    overflow: hidden;
    z-index : -1;
    border: none;
}

body, html{
    font-size: 10px;
    font-family: $text;
    line-height: 1;
    background: $black;
}

.skip-menu li a{
    position: absolute;
    top: 0px;
    left: 0px;
    width: 1px;
    height: 1px;
    font-size: 0px;
    line-height: 0px;
    color: $white;
    text-align: center;
    &:focus { //&는 나를 참조해서 포커스(a태그자체). 포커스는 키보드 이벤트
        width: 100%;
        height: 50px;
        font-size: 24px;
        line-height: 50px;
    }
}

.dic-btn{
    width: 100%;
    height: 56px; //일단 기준으로 잡고, 필요시 변경할 것
    border: solid 1px $white;
    display: flex;
    align-items: center;
    justify-content: center;
    color: $white;
    box-sizing: border-box;
    position: relative;
    top: 0px;
    left: 0px;
    transition: 500ms;
    font-size: 16px;
    z-index: 1;
    margin-top: 40px; //내리기위해
    transform: translateY(10px); //살짝 내리기위해, lihover시 버튼 위로 올라가는 효과 줄려고(main.scss에서)
    &:after{ //영역이 채워지는 
        content: "";
        width: 0px;
        height: 100%;
        background: $white;
        position: absolute;
        top: 0px;
        left: 0px;
        opacity: 0;
        z-index: -1;
        transition: width 0ms 500ms, opacity 500ms 0ms;
    }
    &:hover:after{
        width: 100%;
        opacity: 1;
        transition: width 500ms 0ms, opacity 0ms;
    }
    &:hover{
        color: #151515;
    }
}

.mobile {
    display: none;
}
@include laptop{
    .inner{
        padding: 0px 100px; // 0px 140px에서 줄어듦
    }
}
@include laptop02{
    .inner{
        padding: 0px 75px;
    }
}

@include tablet{
    .inner{
        padding: 0px 20px;
    }
}

//768px이 되면 pc클래스가 있는 애들은 display: none이 되고, .mobile클래스가 붙은 애들은 display: block;이될것
@include mobile{
    .pc{
        display: none!important; //!important 강제적용. 여기선 우선적용되야기 때문에 ㄱㅊ
    }
    .mobile{
        display: block!important;
    }
    //padding : 모바일에서 다 붙지x 살짝 여백을 두고(폰 베젤 고려)
}